name: üöÄ Build Tracker Controller Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable debug logging'
        required: false
        default: 'false'

env:
  PROJECT_NAME: TrackerControllerSimple
  PLUGIN_VERSION: v1.2.0

jobs:
  build:
    name: üî® Build Audio Unit Plugin
    runs-on: macos-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üõ†Ô∏è Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: ‚ÑπÔ∏è Show build environment
      run: |
        echo "üñ•Ô∏è macOS version: $(sw_vers -productVersion)"
        echo "üîß Xcode version: $(xcodebuild -version)"
        echo "üèóÔ∏è Available SDKs:"
        xcodebuild -showsdks | grep macosx
        echo "üéØ Target: Apple Silicon (arm64)"
        
    - name: üìã Verify project structure
      run: |
        echo "üìÅ Project structure:"
        ls -la
        echo "üéµ Framework files:"
        ls -la TrackerControllerFramework/
        
    - name: üîß Create Simplified Project
      run: |
        echo "üîß Creating simplified Xcode project..."
        chmod +x create_simple_project.sh
        ./create_simple_project.sh
        
    - name: üèóÔ∏è Build Framework
      run: |
        echo "üî® Building TrackerControllerFramework..."
        chmod +x build_plugin.sh
        ./build_plugin.sh framework
        
    - name: ‚úÖ Verify Build
      run: |
        echo "üîç Verifying build results..."
        if [ -f "build/Output/TrackerControllerFramework.framework/TrackerControllerFramework" ]; then
          echo "‚úÖ Framework built successfully"
          file build/Output/TrackerControllerFramework.framework/TrackerControllerFramework
        else
          echo "‚ùå Framework build failed"
          find build -name "*.framework" -type d 2>/dev/null || echo "No frameworks found"
        fi
        
    - name: üì¶ Prepare Release Package
      run: |
        echo "üì¶ Creating release package..."
        
        # Create release directory
        mkdir -p release
        
        # Copy built products
        BUILT_PRODUCTS="build/DerivedData/Build/Products/Release"
        if [ -d "$BUILT_PRODUCTS" ]; then
          cp -R "$BUILT_PRODUCTS/TrackerControllerHost.app" release/ 2>/dev/null || echo "‚ö†Ô∏è Host app not found"
          cp -R "$BUILT_PRODUCTS/TrackerControllerFramework.framework" release/ 2>/dev/null || echo "‚ö†Ô∏è Framework not found"
          
          # Check if Audio Unit is embedded in host app
          if [ -d "$BUILT_PRODUCTS/TrackerControllerHost.app/Contents/PlugIns/TrackerControllerAU.appex" ]; then
            echo "‚úÖ Audio Unit extension found in host app"
          else
            echo "‚ö†Ô∏è Audio Unit extension not found"
          fi
        fi
        
        # Create installation instructions
        cat > release/INSTALLATION.md << 'EOF'
        # üéµ Tracker Controller Plugin Installation
        
        ## Quick Install
        1. Double-click `TrackerControllerHost.app` to register the plugin
        2. Open your DAW (Logic Pro, GarageBand, etc.)
        3. Add MIDI FX ‚Üí Polyend ‚Üí Tracker Controller
        4. Connect your Polyend Tracker Mini via USB
        5. Start controlling! üéâ
        
        ## Troubleshooting
        - If plugin doesn't appear, restart your DAW
        - Check Console.app for any error messages
        - Ensure Tracker Mini is connected and powered on
        
        ## Features
        - 8-track mixer with volume/pan/mute
        - Pattern selection (0-127)
        - Transport controls (play/stop/record)
        - Performance FX (delay, reverb, macros)
        - Advanced controls (swing, quantize)
        - Real-time connection monitoring
        
        Built with ‚ù§Ô∏è for the Polyend community
        EOF
        
        echo "üìã Release package contents:"
        ls -la release/
        
    - name: üóúÔ∏è Create Release Archive
      run: |
        cd release
        zip -r "../TrackerController-${{ env.PLUGIN_VERSION }}-macOS.zip" .
        echo "üì¶ Created: TrackerController-${{ env.PLUGIN_VERSION }}-macOS.zip"
        
    - name: üìä Build Summary
      run: |
        echo "## üéâ Build Completed Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üì¶ Artifacts Created:" >> $GITHUB_STEP_SUMMARY
        echo "- TrackerController Host App" >> $GITHUB_STEP_SUMMARY
        echo "- TrackerController Framework" >> $GITHUB_STEP_SUMMARY
        echo "- TrackerController Audio Unit Extension" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üéØ Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the artifacts below" >> $GITHUB_STEP_SUMMARY
        echo "2. Extract and run TrackerControllerHost.app" >> $GITHUB_STEP_SUMMARY
        echo "3. Open your DAW and add the plugin as MIDI FX" >> $GITHUB_STEP_SUMMARY
        echo "4. Connect your Polyend Tracker Mini" >> $GITHUB_STEP_SUMMARY
        echo "5. Start making music! üéµ" >> $GITHUB_STEP_SUMMARY
        
    - name: üì§ Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tracker-controller-plugin-${{ env.PLUGIN_VERSION }}
        path: |
          release/
          build/DerivedData/Build/Products/Release/
        retention-days: 30
        
    - name: üì§ Upload Release Archive
      uses: actions/upload-artifact@v4
      with:
        name: tracker-controller-release-${{ env.PLUGIN_VERSION }}
        path: TrackerController-${{ env.PLUGIN_VERSION }}-macOS.zip
        retention-days: 90
        
    - name: üè∑Ô∏è Create Release (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PLUGIN_VERSION }}-${{ github.run_number }}
        release_name: Tracker Controller ${{ env.PLUGIN_VERSION }} Build ${{ github.run_number }}
        body: |
          üéµ **Tracker Controller Plugin for Polyend Tracker Mini**
          
          ## ‚ú® Features
          - Professional Audio Unit v3 plugin
          - Real-time MIDI control for Tracker Mini
          - 8-track mixer with advanced controls
          - Modern SwiftUI interface
          - Built for Apple Silicon (M1/M2/M3)
          
          ## üì• Installation
          1. Download `TrackerController-${{ env.PLUGIN_VERSION }}-macOS.zip`
          2. Extract and run `TrackerControllerHost.app`
          3. Add plugin in your DAW as MIDI FX
          
          ## üéØ Compatibility
          - macOS 13.0+
          - Apple Silicon native
          - Logic Pro, GarageBand, Reaper, and more
          
          Built automatically with GitHub Actions ‚ö°
        draft: false
        prerelease: false 